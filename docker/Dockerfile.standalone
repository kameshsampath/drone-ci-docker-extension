#syntax=docker/dockerfile:1.4

# FROM goreleaser/goreleaser AS bin

# WORKDIR /build

# COPY  --from=backendsrc . .

# RUN goreleaser build --snapshot --rm-dist

# FROM kameshsampath/drone-ci-extension-ui-base AS ui

# WORKDIR /app

# COPY --from=uisrc . .

# RUN pnpm install \
#   && pnpm run clean && pnpm run build

FROM alpine

LABEL org.opencontainers.image.title="Drone CI" \
    org.opencontainers.image.description="Run Continuous Integration & Delivery Pipelines (CI/CD) from within Docker Desktop." \
    org.opencontainers.image.vendor="Harness" \
    com.docker.desktop.extension.icon="https://github.com/harness/drone-ci-docker-extension/raw/main/etc/icon.png" \
    com.docker.desktop.extension.api.version=">= 0.2.3" \
    com.docker.extension.screenshots="[{\"alt\":\"List of Pipelines\", \"url\":\"https://github.com/harness/drone-ci-docker-extension/raw/main/docs/images/list.png\"}, {\"alt\":\"Pipeline Details\", \"url\":\"https://github.com/harness/drone-ci-docker-extension/raw/main/docs/images/details.png\"}]" \
    com.docker.extension.detailed-description="Drone is a self-service Continuous Integration platform for busy development teams. This extension will help developers do Continuous Integration on their laptops using <a href=\"https://drone.io\">Drone</a> CI." \
    com.docker.extension.publisher-url="https://www.drone.io/" \
    com.docker.extension.additional-urls="[{\"title\":\"Documentation\",\"url\":\"https://docs.drone.io\"}, {\"title\":\"Support\",\"url\":\"https://github.com/harness/drone-ci-docker-extension/issues\"}, {\"title\":\"License\",\"url\":\"https://github.com/harness/drone-ci-docker-extension/blob/main/LICENSE\"}, {\"title\":\"Discussions\",\"url\":\"https://github.com/harness/drone-ci-docker-extension/discussions\"}]" \
    com.docker.extension.changelog="https://github.com/harness/drone-ci-docker-extension/blob/main/CHANGELOG.md"

ARG TARGETARCH

RUN apk add --update --no-cache jq bash curl \
    && mkdir -p /tools/darwin \
    && mkdir -p /tools/linux \
    && mkdir -p /tools/windows

# Download yq
RUN curl -sL "https://github.com/mikefarah/yq/releases/download/v4.25.3/yq_darwin_${TARGETARCH}" -o /tools/darwin/yq 

RUN curl -sL "https://github.com/mikefarah/yq/releases/download/v4.25.3/yq_linux_${TARGETARCH}" -o /tools/linux/yq 

RUN chmod +x /tools/darwin/yq \
  && chmod +x /tools/linux/yq

# No arm64 yq exists for windows
# End Download yq

## Copy Drone CLI
COPY --from=dist "drone_darwin_${TARGETARCH}*/drone" /tools/darwin/drone
COPY --from=dist "drone_linux_${TARGETARCH}*/drone"  /tools/linux/drone
COPY --from=dist "drone_windows_${TARGETARCH}*/drone.exe"  /tools/windows/drone.exe

RUN chmod +x /tools/darwin/drone /tools/linux/drone

## Copy pipelines-finder

COPY --from=dist  "pipelines-finder_darwin_${TARGETARCH}*/pipelines-finder" /tools/darwin/pipelines-finder
COPY --from=dist  "pipelines-finder_linux_${TARGETARCH}*/pipelines-finder"  /tools/linux/pipelines-finder
COPY --from=dist  "pipelines-finder_windows_${TARGETARCH}*/pipelines-finder.exe" /tools/windows/pipelines-finder.exe

RUN chmod +x /tools/darwin/pipelines-finder /tools/linux/pipelines-finder

# COPY backend service
COPY --from=dist "backend_linux_${TARGETARCH}*/backend"  /backend
RUN chmod +x /backend

COPY --from=etc /docker-compose.yaml .
COPY --from=etc /metadata.json .
COPY --from=etc /logo.svg .

COPY --from=ui  . ui

COPY --from=scripts run-drone.sh /tools/run-drone
COPY --from=scripts kill-drone.sh /tools/kill-drone

CMD /backend -socket /run/guest-services/extension-drone-ci.sock
